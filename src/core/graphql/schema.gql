# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateUserInput {
  displayName: String!
  isBlocked: Boolean
  isSuperUser: Boolean
  password: String!
  permissions: [Permission!]
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeviceModel {
  browser: String
  os: String
  type: String
}

input EnableTotpInput {
  pin: String!
  secret: String!
}

input ListUsersInput {
  limit: Int = 20
  orderBy: String
  orderDirection: OrderDirection = ASC
  page: Int = 1
  searchFor: String
}

type LocationModel {
  city: String!
  country: String!
  latidute: Float!
  longitude: Float!
}

input LoginInput {
  password: String!
  pin: String
  username: String!
}

type Mutation {
  clearSessionCookie: Boolean!
  createUser(data: CreateUserInput!): Boolean!
  disabledTotp(userId: String!): Boolean!
  enableTotp(data: EnableTotpInput!): Boolean!
  login(data: LoginInput!): Boolean!
  logout: Boolean!
  removeSession(id: String!): Boolean!
  resetPasswordUser(data: ResetUserPasswordInput!): Boolean!
  updatePasswordUser(data: UpdateUserPasswordInput!): Boolean!
  updateUser(data: UpdateUserInput!): Boolean!
  upload(file: Upload!): Boolean!
}

enum OrderDirection {
  ASC
  DESC
}

enum Permission {
  HSTS_MVS_CREATE
  HSTS_MVS_READ_ALL
  HSTS_MVS_READ_OWN
  REQUEST_READ_ALL
  REQUEST_READ_OWN
  USER_CREATE
  USER_DELETE
  USER_READ
  USER_RESET_PASSWORD
  USER_UPDATE
}

type Query {
  findAllUsers(data: ListUsersInput!): UserListModel!
  findCurrentSession: SessionModel!
  findMe: UserModel!
  findSessions: [SessionModel!]!
  findSessionsById(id: String!): [SessionModel!]!
  findUserById(id: String!): UserModel!
  generateTotpSecret: TotpModel!
}

input ResetUserPasswordInput {
  id: String!
  password: String!
}

type SessionMetadaModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type SessionModel {
  createdAt: String!
  id: ID!
  metadata: SessionMetadaModel!
  userId: String!
}

type TotpModel {
  qrcodeUrl: String!
  secret: String!
}

input UpdateUserInput {
  displayName: String
  id: String!
  isBlocked: Boolean
  isSuperUser: Boolean
  permissions: [Permission!]
  username: String
}

input UpdateUserPasswordInput {
  currentPassword: String!
  password: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserListModel {
  currentPage: Int!
  data: [UserModel!]!
  hasNext: Boolean!
  hasPrev: Boolean!
  pages: Int!
  total: Int!
}

type UserModel {
  createdAt: DateTime!
  displayName: String!
  id: ID!
  isBlocked: Boolean!
  isSuperUser: Boolean!
  isTotpEnabled: Boolean!
  permissions: [Permission!]!
  updatedAt: DateTime!
  username: String!
}